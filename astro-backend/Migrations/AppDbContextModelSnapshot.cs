// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using astro_backend;

#nullable disable

namespace astro_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("astro_backend.models.Account", b =>
                {
                    b.Property<int>("account_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("account_id"));

                    b.Property<int>("account_status_id")
                        .HasColumnType("integer");

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("balance")
                        .HasColumnType("numeric");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("account_id");

                    b.HasIndex("account_status_id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("astro_backend.models.Asset", b =>
                {
                    b.Property<int>("asset_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("asset_id"));

                    b.Property<string>("abbreviation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("account_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("asset_id");

                    b.HasIndex("account_id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("astro_backend.models.Authentication_log", b =>
                {
                    b.Property<int>("log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("log_id"));

                    b.Property<string>("device_info")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ip_address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("login_time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("logout_time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("log_id");

                    b.HasIndex("user_id");

                    b.ToTable("Authentication_logs");
                });

            modelBuilder.Entity("astro_backend.models.Status", b =>
                {
                    b.Property<int>("status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("status_id"));

                    b.Property<decimal>("annual_interest_rate")
                        .HasColumnType("numeric");

                    b.Property<string>("status_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("total_amount_criteria")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transaction_fee")
                        .HasColumnType("numeric");

                    b.Property<int>("transactions_criteria")
                        .HasColumnType("integer");

                    b.HasKey("status_id");

                    b.ToTable("Statuss");
                });

            modelBuilder.Entity("astro_backend.models.Transaction", b =>
                {
                    b.Property<int>("transaction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("transaction_id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<int>("from_account_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("to_account_id")
                        .HasColumnType("integer");

                    b.Property<string>("transaction_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("transaction_id");

                    b.HasIndex("from_account_id");

                    b.HasIndex("to_account_id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("astro_backend.models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("Otp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("OtpExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("astro_backend.models.User_security", b =>
                {
                    b.Property<int>("security_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("security_id"));

                    b.Property<string>("latest_otp_secret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("security_id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("User_securitys");
                });

            modelBuilder.Entity("astro_backend.models.Account", b =>
                {
                    b.HasOne("astro_backend.models.Status", "Status")
                        .WithMany("Accounts")
                        .HasForeignKey("account_status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("astro_backend.models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("astro_backend.models.Account", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("astro_backend.models.Asset", b =>
                {
                    b.HasOne("astro_backend.models.Account", "Account")
                        .WithMany("Assets")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("astro_backend.models.Authentication_log", b =>
                {
                    b.HasOne("astro_backend.models.User", "User")
                        .WithMany("Authentication_logs")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("astro_backend.models.Transaction", b =>
                {
                    b.HasOne("astro_backend.models.Account", "FromAccount")
                        .WithMany("TransactionsFrom")
                        .HasForeignKey("from_account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("astro_backend.models.Account", "ToAccount")
                        .WithMany("TransactionsTo")
                        .HasForeignKey("to_account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromAccount");

                    b.Navigation("ToAccount");
                });

            modelBuilder.Entity("astro_backend.models.User_security", b =>
                {
                    b.HasOne("astro_backend.models.User", "User")
                        .WithOne("User_security")
                        .HasForeignKey("astro_backend.models.User_security", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("astro_backend.models.Account", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("TransactionsFrom");

                    b.Navigation("TransactionsTo");
                });

            modelBuilder.Entity("astro_backend.models.Status", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("astro_backend.models.User", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Authentication_logs");

                    b.Navigation("User_security");
                });
#pragma warning restore 612, 618
        }
    }
}
